######## Start builder #######
FROM ubuntu:20.04

USER root

# Required so that pipes work properly in the Dockerfile
SHELL [ "/bin/bash", "-o", "pipefail", "-c" ]

# Package installations in stallions for the run package
RUN apt-get update && \
    apt-get install -y  --no-install-recommends \
    openssl \
    && apt-get remove -y perl

# Pegasus directories.  The OpenPegasus run directory is the single directory
# that will contain the lib and bin directorys of the OpenPegasus runtime
# in the run image
ENV PEGASUS_RUN_ROOT=${PEGASUS_BUILD_ROOT}

# Define the OpenPegasus  run settings. These are minimal.
#
# Settings below that are flags, with values set to true, enable the action
# simply through the existence of the variable.  The variables value has no
# effect.  Note that there are almost NO environment variables to control
# pegasus execution.  Execution variations are controlled through the
# config variables that can be viewed through the client cimconfig utility and
# a terminal or the OpenPegasus web admin interface which is on the same
# uri/ports and the running OpenPegasus

# Add OpenPegasus bin directory to PATH to get access to runtime components
ENV PATH=$PATH:${PEGASUS_RUN_ROOT}/bin

# Add the OpenPegasus library to the LD_LIBRARY_PATH
ENV LD_LIBRARY_PATH=${PEGASUS_RUN_ROOT}/lib:${LD_LIBRARY_PATH}

# TODO: Does this have to be part of the run time environment???
ENV PEGASUS_HAS_SSL=true

# Add the pegasus build results to the run image root directory
COPY ./openpegasus_home ${PEGASUS_RUN_ROOT}
# Copy the build environment variables as record of the build configuration
COPY ./pegasus-build-variables.env ${PEGASUS_RUN_ROOT}

# Build folder
WORKDIR ${PEGASUS_RUN_ROOT}

# Build the binaries and run the cimserver
# Set to start server on startup. Can override on command line run command
# ENTRYPOINT ["/bin/bash", "-l", "-c"]
CMD ["cimserver; tail -f /dev/null"]
